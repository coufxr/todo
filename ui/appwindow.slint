import { SpinBox, Button, CheckBox, Slider, LineEdit, ScrollView, ListView,
    HorizontalBox, VerticalBox, GridBox, StandardButton, Palette } from "std-widgets.slint";

export struct TodoItem  {
    title: string,
    checked: bool,
}

export component AppWindow inherits Window {
    in property <[TodoItem]> todo-model;

    in property <bool> show-header: false;

    callback todo-added(string);
    callback remove-done();
    callback popup_confirmed;
    callback show_confirm_popup;

    show_confirm_popup => {
        confirm_popup.show();
    }

    preferred-width: 400px;
    preferred-height: 600px;

    confirm_popup := PopupWindow {
        x: 40px;
        y: 100px;
        width: min(confirm_popup_layout.preferred-width, root.width - 80px);

        Rectangle {
            background: Palette.background;
            border-color: Palette.border;
            border-width: 1px;
        }

        confirm_popup_layout := Dialog {
            height: 100%;
            width: 100%;

            confirm_popup_text := Text {
                text: "Some items are not done, are you sure you wish to quit?";
                wrap: word-wrap;
            }

            StandardButton {
                kind: yes;
                clicked => {
                    root.popup_confirmed();
                }
            }

            StandardButton {
                kind: no;
            }
        }
    }

    VerticalBox {
        HorizontalBox {
            padding: 0px;
            edit_box := VerticalBox {
                height: 10%;
                width: 10%;
                out property <string> text :text-edit.text;
                text-edit := LineEdit {
                    accepted(text) => {
                        self.text = "";
                    }
                    placeholder-text: "What needs to be done?";
                }
            }

            btn := Button {
                clicked => {
                    root.todo-added(edit_box.text);
                    edit_box.text = "";
                }

                text: "Add New Entry";
                enabled: text-edit.text != "";
            }
        }

        list-view := ListView {
            for todo in root.todo-model: HorizontalLayout {
                CheckBox {
                    toggled => {
                        todo.checked = self.checked;
                    }

                    text: todo.title;
                    checked: todo.checked;
                }
            }
        }

        HorizontalBox {
            padding: 0px;
            alignment: end;

            Button {
                clicked => {
                    root.remove-done();
                }

                text: "Remove Done Items";
            }
        }
    }
}
